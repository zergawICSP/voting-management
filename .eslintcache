[{"F:\\Projects\\voting_system\\src\\index.js":"1","F:\\Projects\\voting_system\\src\\reportWebVitals.js":"2","F:\\Projects\\voting_system\\src\\App.js":"3","F:\\Projects\\voting_system\\src\\components\\layouts\\landing\\index_.js":"4","F:\\Projects\\voting_system\\src\\components\\layouts\\Login\\Root.js":"5","F:\\Projects\\voting_system\\src\\components\\layouts\\Login\\LoginForm.js":"6","F:\\Projects\\voting_system\\src\\store\\index_.js":"7","F:\\Projects\\voting_system\\src\\reducer\\rootReducer.js":"8","F:\\Projects\\voting_system\\src\\reducer\\authReducer.js":"9","F:\\Projects\\voting_system\\src\\action\\types.js":"10","F:\\Projects\\voting_system\\src\\action\\authAction.js":"11","F:\\Projects\\voting_system\\src\\components\\layouts\\home\\Root.js":"12","F:\\Projects\\voting_system\\src\\components\\layouts\\nav\\Nav.js":"13","F:\\Projects\\voting_system\\src\\action\\attendantsAction.js":"14","F:\\Projects\\voting_system\\src\\reducer\\attendantReducer.js":"15","F:\\Projects\\voting_system\\src\\components\\layouts\\vote\\Root.js":"16","F:\\Projects\\voting_system\\src\\components\\layouts\\vote\\AgendaVoteForm.js":"17","F:\\Projects\\voting_system\\src\\components\\layouts\\vote\\CandidateVoteForm.js":"18","F:\\Projects\\voting_system\\src\\reducer\\voteReducer.js":"19","F:\\Projects\\voting_system\\src\\api\\config.js":"20","F:\\Projects\\voting_system\\src\\action\\voteAction.js":"21","F:\\Projects\\voting_system\\src\\components\\layouts\\shareholderRegistration\\Root.js":"22","F:\\Projects\\voting_system\\src\\components\\layouts\\shareholderRegistration\\RegisterShareholderForm.js":"23","F:\\Projects\\voting_system\\src\\components\\layouts\\landing\\voteIndex.js":"24","F:\\Projects\\voting_system\\src\\components\\layouts\\agenda\\Root.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1481,"mtime":1612891083446,"results":"29","hashOfConfig":"27"},{"size":2606,"mtime":1612881371449,"results":"30","hashOfConfig":"27"},{"size":1437,"mtime":1612814925474,"results":"31","hashOfConfig":"27"},{"size":2838,"mtime":1612814812221,"results":"32","hashOfConfig":"27"},{"size":354,"mtime":1612299342565,"results":"33","hashOfConfig":"27"},{"size":316,"mtime":1612622438473,"results":"34","hashOfConfig":"27"},{"size":818,"mtime":1612812094599,"results":"35","hashOfConfig":"27"},{"size":1158,"mtime":1612813661879,"results":"36","hashOfConfig":"27"},{"size":946,"mtime":1612805798099,"results":"37","hashOfConfig":"27"},{"size":13212,"mtime":1612887861509,"results":"38","hashOfConfig":"27"},{"size":3331,"mtime":1612891097913,"results":"39","hashOfConfig":"27"},{"size":1877,"mtime":1612882185002,"results":"40","hashOfConfig":"27"},{"size":1530,"mtime":1612814316960,"results":"41","hashOfConfig":"27"},{"size":5389,"mtime":1612815001195,"results":"42","hashOfConfig":"27"},{"size":11241,"mtime":1612883020753,"results":"43","hashOfConfig":"27"},{"size":11792,"mtime":1612893393761,"results":"44","hashOfConfig":"27"},{"size":1443,"mtime":1612815059980,"results":"45","hashOfConfig":"27"},{"size":117,"mtime":1612887858421,"results":"46","hashOfConfig":"27"},{"size":1824,"mtime":1612815903777,"results":"47","hashOfConfig":"27"},{"size":1066,"mtime":1612804591319,"results":"48","hashOfConfig":"27"},{"size":7420,"mtime":1612798900013,"results":"49","hashOfConfig":"27"},{"size":8443,"mtime":1612892507207,"results":"50","hashOfConfig":"27"},{"size":3095,"mtime":1612895720504,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1clf0f8",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projects\\voting_system\\src\\index.js",[],["105","106"],"F:\\Projects\\voting_system\\src\\reportWebVitals.js",[],"F:\\Projects\\voting_system\\src\\App.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\landing\\index_.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\Login\\Root.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\Login\\LoginForm.js",[],"F:\\Projects\\voting_system\\src\\store\\index_.js",[],"F:\\Projects\\voting_system\\src\\reducer\\rootReducer.js",[],"F:\\Projects\\voting_system\\src\\reducer\\authReducer.js",[],"F:\\Projects\\voting_system\\src\\action\\types.js",[],"F:\\Projects\\voting_system\\src\\action\\authAction.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\home\\Root.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\nav\\Nav.js",["107","108","109","110"],"import React, { useEffect, useState } from \"react\";\r\n\r\n// EXTERNAL IMPORTS\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { FaVoteYea } from \"react-icons/fa\";\r\nimport { AiOutlineUser, AiOutlinePoweroff } from \"react-icons/ai\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\nimport { MdViewAgenda } from \"react-icons/md\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { instance } from \"../../../api/config\";\r\n\r\nexport default function Nav() {\r\n\r\n  return (\r\n    <div className=\"flex flex-row w-screen py-4\">\r\n      <div className=\"m-auto\">\r\n        {localStorage.getItem(\"isAdmin\") === \"1\" ? (\r\n          <div className=\"flex flex-row space-x-28 pl-20\">\r\n            <NavLink\r\n              to=\"/register\"\r\n              className=\"p-4 rounded-full hover:bg-third hover:border-third group\"\r\n              activeClassName=\"bg-third text-white\"\r\n            >\r\n              <AiOutlineUserAdd size=\"30\" className=\"group-hover:text-white\" />\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/init_vote\"\r\n              className=\"p-4 rounded-full hover:bg-third hover:border-third group\"\r\n              activeClassName=\"bg-third text-white\"\r\n            >\r\n              <MdViewAgenda size=\"30\" className=\"group-hover:text-white\" />\r\n            </NavLink>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-row space-x-28 pl-20\">\r\n            <NavLink\r\n              to=\"/home\"\r\n              className=\"p-4 rounded-full hover:bg-third hover:border-third group\"\r\n              activeClassName=\"bg-third text-white\"\r\n            >\r\n              <FiSearch size=\"30\" className=\"group-hover:text-white\" />\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/vote\"\r\n              className=\"p-4 rounded-full hover:bg-third hover:border-third group\"\r\n              activeClassName=\"bg-third text-white\"\r\n            >\r\n              <FaVoteYea\r\n                size=\"30\"\r\n                className=\"group-hover:text-white text-white\"\r\n              />\r\n            </NavLink>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"group relative inline-block pr-20\">\r\n        <button\r\n          className=\"inline-flex justify-center items-center p-2 bg-third rounded-full border-none focus:outline-none \"\r\n          type=\"button\"\r\n          id=\"options-menu\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"true\"\r\n        >\r\n          <AiOutlineUser className=\"text-white\" size=\"25\" />\r\n        </button>\r\n        <div className=\"absolute hidden group-hover:block right-16 mt-2 w-44 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n          <div\r\n            className=\"py-1\"\r\n            role=\"menu\"\r\n            aria-orientation=\"vertical\"\r\n            aria-labelledby=\"options-menu\"\r\n          >\r\n            <button\r\n              onClick={() => {\r\n                localStorage.clear();\r\n                window.location.reload();\r\n              }}\r\n              className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex flex-row justify-around items-center\"\r\n              role=\"menuitem\"\r\n            >\r\n              <AiOutlinePoweroff />\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","F:\\Projects\\voting_system\\src\\action\\attendantsAction.js",[],"F:\\Projects\\voting_system\\src\\reducer\\attendantReducer.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\vote\\Root.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\vote\\AgendaVoteForm.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\vote\\CandidateVoteForm.js",["111"],"import React, { Component } from \"react\";\r\n\r\n// EXTERNAL IMPORT\r\nimport { BiBarcodeReader, BiReset } from \"react-icons/bi\";\r\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport RiseLoader from \"react-spinners/RiseLoader\";\r\nimport { instance } from \"../../../api/config\";\r\nimport { connect } from \"react-redux\";\r\nimport { Tooltip } from \"react-tippy\";\r\n\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-dark.css\";\r\n\r\n// COMPONENT IMPORT\r\nimport { submitCandidateVote } from \"../../../action/voteAction\";\r\n\r\nclass CandidateVoteForm extends Component {\r\n  // Component state\r\n  state = {\r\n    // app state\r\n    isAttendantFetchingActivated: false,\r\n    returnedAttendantValue: [],\r\n    candiateData: [],\r\n    checkedCandidates: [],\r\n\r\n    // form state\r\n    barcodeIDResult: \"\",\r\n    toggelingBarcodeReaderCamera: false,\r\n  };\r\n\r\n  render() {\r\n    // Local variables\r\n    const { isShareholderCreationLoading, submitCandidateVote } = this.props;\r\n    let dataValue = [];\r\n    // OnGrid ready\r\n    const onGridReady = (params) => {\r\n      let dataValues = [];\r\n      instance.get(\"/candidates\").then((response) => {\r\n        response.data.candidates.map((SingleData) =>\r\n          dataValues.push(SingleData)\r\n        );\r\n        this.setState({ candiateData: [...dataValues] }, () => {\r\n          params.api.applyTransaction({ add: this.state.candiateData });\r\n        });\r\n      });\r\n    };\r\n\r\n    // Column Headers\r\n    const columnDefs = [\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"name\",\r\n        checkboxSelection: true,\r\n      },\r\n    ];\r\n\r\n    const defaultColDef = {\r\n      flex: 1,\r\n    };\r\n\r\n    // Row selection type - whether it is single, multiple or both\r\n    const rowSelectionType = \"multiple\";\r\n\r\n    // Operation when the row is selected\r\n    const onSelectionChanged = (e) => {\r\n      // Adding the selected row to the state value\r\n      // Checking if the selected row length is less than 11\r\n      console.log(e.api.getSelectedRows());\r\n      if (e.api.getSelectedRows().length > 11)\r\n        toast.warning(\r\n          \"Selected Candidates shouldn't excced 11 Candidates. Your choice will be invalid !\",\r\n          { position: \"bottom-center\" }\r\n        );\r\n        e.api.getSelectedRows().map((SingleData) => {\r\n          dataValue.push(SingleData.id);\r\n          this.setState({\r\n            checkedCandidates: dataValue,\r\n          });\r\n        });\r\n    };\r\n\r\n    //   Handling scanned bar code result\r\n    const handleFetchingAttendantInformation = (scannedAttendantBarcodeID) => {\r\n      if (\r\n        scannedAttendantBarcodeID !== \"\" &&\r\n        scannedAttendantBarcodeID !== null\r\n      ) {\r\n        this.setState({ isAttendantFetchingActivated: true });\r\n        instance\r\n          .get(\"/barcode?barcode=\" + scannedAttendantBarcodeID)\r\n          .then((response) => {\r\n            if (response.data.shareholder !== null) {\r\n              this.setState({\r\n                returnedAttendantValue: [response.data.shareholder],\r\n                isAttendantFetchingActivated: false,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                returnedAttendantValue: [],\r\n                isAttendantFetchingActivated: false,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(\r\n          \"Candidate Barcode ID Not Present. Please Scan Barcode First !\",\r\n          { position: \"bottom-center\" }\r\n        );\r\n      }\r\n    };\r\n\r\n    //   Submitting attendant vote\r\n    const submitCandidateVoteInformation = () => {\r\n      // do sth here\r\n      const { checkedCandidates, barcodeIDResult } = this.state;\r\n      console.log(checkedCandidates.length);\r\n      if (checkedCandidates.length > 11) {\r\n        toast.error(\r\n          \"Selected Candidates shouldn't excced 11 Candidates. Your choice will be invalid !\",\r\n          { position: \"bottom-center\" }\r\n        );\r\n      } else {\r\n        if (checkedCandidates.length > 0) {\r\n          if (barcodeIDResult !== \"\" && barcodeIDResult !== null) {\r\n            submitCandidateVote(checkedCandidates, barcodeIDResult);\r\n\r\n            clearingFormData();\r\n          } else {\r\n            toast.error(\r\n              \"One or more fields aren't filled. Please provide and submit again!\",\r\n              { position: \"bottom-center\" }\r\n            );\r\n          }\r\n        } else {\r\n          toast.error(\r\n            \"One or more fields aren't filled. Please provide and submit again!\",\r\n            { position: \"bottom-center\" }\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    const clearingFormData = () => {\r\n      this.setState({\r\n        barcodeIDResult: \"\",\r\n        toggelingBarcodeReaderCamera: false,\r\n        returnedAttendantValue: [],\r\n      });\r\n      document.getElementById(\"userBarcodeID\").value = \"\";\r\n    };\r\n\r\n    //   Displaying Fetched attendant data\r\n    const displayingFetchedAttendantData =\r\n      this.state.returnedAttendantValue.length > 0 ? (\r\n        this.state.returnedAttendantValue.map((SingleValue) => {\r\n          return (\r\n            <div key={SingleValue.id}>\r\n              <p className=\"font-bold text-md\">Attendant Information</p>\r\n              <div className=\"flex flex-row justify-evenly items-center mt-5 mb-5 space-x-4\">\r\n                <p className=\"text-md\">\r\n                  Name:{\" \"}\r\n                  <span className=\"font-bold\">{\" \" + SingleValue.name}</span>\r\n                </p>\r\n                <p className=\"text-md\">\r\n                  Total Share value:{\" \"}\r\n                  <span className=\"font-bold\">\r\n                    {\" \" + SingleValue.no_of_shares}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <div>\r\n          <p>No Record Found !</p>\r\n        </div>\r\n      );\r\n\r\n    if (isShareholderCreationLoading)\r\n      return <RiseLoader className=\"text-white mt-5\" size={10} color=\"white\" />;\r\n\r\n    return (\r\n      <div className=\"flex flex-col justify-center items-center text-white\">\r\n        <form className=\"w-3/4 mt-5\">\r\n          <div className=\"flex flex-row justify-center items-center space-x-4 w-full\">\r\n            <input\r\n              className=\"px-5 py-2 bg-transparent border w-1/2 border-gray-100 rounded-full text-white focus:outline-none focus:text-white\"\r\n              placeholder=\"Barcode ID\"\r\n              id=\"userBarcodeID\"\r\n              name=\"userBarcodeID\"\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                this.setState({ barcodeIDResult: e.target.value });\r\n              }}\r\n              value={\r\n                this.state.barcodeIDResult !== \"\"\r\n                  ? this.state.barcodeIDResult\r\n                  : \"\"\r\n              }\r\n            />\r\n            <Tooltip title=\"Scan Barcode\">\r\n              <button\r\n                className=\"px-2 py-2 bg-white text-third rounded-2xl\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  this.setState({\r\n                    toggelingBarcodeReaderCamera: !this.state\r\n                      .toggelingBarcodeReaderCamera,\r\n                  });\r\n                }}\r\n              >\r\n                <BiBarcodeReader size=\"20\" />\r\n              </button>\r\n            </Tooltip>\r\n            <Tooltip title=\"Reset Barcode\">\r\n              <button\r\n                className=\"px-2 py-2 bg-white text-third rounded-2xl\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  this.setState({\r\n                    barcodeIDResult: \"\",\r\n                    returnedAttendantValue: [],\r\n                  });\r\n                  document.getElementById(\"userBarcodeID\").value = \"\";\r\n                }}\r\n              >\r\n                <BiReset size=\"20\" />\r\n              </button>\r\n            </Tooltip>\r\n\r\n            {/* Displaying identify attendant button only if scanned result is null, toggeling camera is false and feched attendant value is null */}\r\n            <div>\r\n              {this.state.barcodeIDResult !== \"\" &&\r\n              !this.state.toggelingBarcodeReaderCamera ? (\r\n                this.state.returnedAttendantValue.length > 0 ? null : (\r\n                  <div>\r\n                    <Tooltip title=\"Identify Attendant\">\r\n                      <button\r\n                        className=\"px-3 py-2 bg-white text-third rounded-full\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleFetchingAttendantInformation(\r\n                            this.state.barcodeIDResult\r\n                          );\r\n                        }}\r\n                      >\r\n                        <FiSearch size=\"20\" />\r\n                      </button>\r\n                    </Tooltip>\r\n                  </div>\r\n                )\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Displaying the barcode scanner only if toggling camera state is true */}\r\n          <div className=\"\">\r\n            {this.state.toggelingBarcodeReaderCamera && (\r\n              <BarcodeScannerComponent\r\n                width={500}\r\n                height={100}\r\n                onUpdate={(error, result) => {\r\n                  if (result) {\r\n                    this.setState({\r\n                      barcodeIDResult: result.text,\r\n                      toggelingBarcodeReaderCamera: false,\r\n                    });\r\n                  } else\r\n                    toast.error(error, {\r\n                      position: \"bottom-center\",\r\n                    });\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Displaying fetched attendant data only if the fetched attendant data state is loaded */}\r\n          <div className=\"mt-10\">\r\n            {this.state.isAttendantFetchingActivated ? (\r\n              <RiseLoader className=\"text-white\" size={10} color=\"white\" />\r\n            ) : this.state.returnedAttendantValue.length > 0 ? (\r\n              <div>\r\n                {displayingFetchedAttendantData}\r\n                <div\r\n                  className=\"ag-theme-dark w-full shadow-2xl bg-transparent text-white border\"\r\n                  style={{ height: \"300px\", width: \"500px\" }}\r\n                >\r\n                  <AgGridReact\r\n                    columnDefs={columnDefs}\r\n                    defaultColDef={defaultColDef}\r\n                    onGridReady={onGridReady}\r\n                    rowSelection={rowSelectionType}\r\n                    onSelectionChanged={onSelectionChanged}\r\n                    rowMultiSelectWithClick={true}\r\n                    className=\"bg-transparent\"\r\n                  ></AgGridReact>\r\n                </div>\r\n                <button\r\n                  className=\"px-3 py-2 bg-white text-third rounded-full mt-5\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    submitCandidateVoteInformation();\r\n                  }}\r\n                >\r\n                  Submit Vote\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isShareholderCreationLoading: state.vote.isShareholderCreationLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitCandidateVote: (candidateVoteData, selectedAttendantBarcodeID) =>\r\n      dispatch(\r\n        submitCandidateVote(candidateVoteData, selectedAttendantBarcodeID)\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateVoteForm);\r\n","F:\\Projects\\voting_system\\src\\reducer\\voteReducer.js",[],"F:\\Projects\\voting_system\\src\\api\\config.js",[],"F:\\Projects\\voting_system\\src\\action\\voteAction.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\shareholderRegistration\\Root.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\shareholderRegistration\\RegisterShareholderForm.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\landing\\voteIndex.js",[],"F:\\Projects\\voting_system\\src\\components\\layouts\\agenda\\Root.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"120","line":1,"column":28,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"121","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":15},{"ruleId":"116","severity":1,"message":"122","line":12,"column":10,"nodeType":"118","messageId":"119","endLine":12,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":77,"column":50,"nodeType":"125","messageId":"126","endLine":77,"endColumn":52},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'toast' is defined but never used.","'instance' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]